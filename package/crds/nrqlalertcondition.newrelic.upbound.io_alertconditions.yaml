---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: alertconditions.nrqlalertcondition.newrelic.upbound.io
spec:
  group: nrqlalertcondition.newrelic.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - newrelic
    kind: AlertCondition
    listKind: AlertConditionList
    plural: alertconditions
    singular: alertcondition
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AlertCondition is the Schema for the AlertConditions API. <no
          value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AlertConditionSpec defines the desired state of AlertCondition
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountId:
                    description: The New Relic account ID for managing your NRQL alert
                      conditions.
                    type: number
                  aggregationDelay:
                    description: How long we wait for data that belongs in each aggregation
                      window. Depending on your data, a longer delay may increase
                      accuracy but delay notifications. Use aggregationDelay with
                      the EVENT_FLOW and CADENCE aggregation methods.
                    type: string
                  aggregationMethod:
                    description: The method that determines when we consider an aggregation
                      window to be complete so that we can evaluate the signal for
                      violations. Default is EVENT_FLOW.
                    type: string
                  aggregationTimer:
                    description: How long we wait after each data point arrives to
                      make sure we've processed the whole batch. Use aggregationTimer
                      with the EVENT_TIMER aggregation method.
                    type: string
                  aggregationWindow:
                    description: The duration of the time window used to evaluate
                      the NRQL query, in seconds.
                    type: number
                  baselineDirection:
                    description: 'The baseline direction of a baseline NRQL alert
                      condition. Valid values are: ''LOWER_ONLY'', ''UPPER_AND_LOWER'',
                      ''UPPER_ONLY'' (case insensitive).'
                    type: string
                  closeViolationsOnExpiration:
                    description: Whether to close all open violations when the signal
                      expires.
                    type: boolean
                  critical:
                    description: A condition term with priority set to critical.
                    items:
                      properties:
                        duration:
                          description: In minutes, must be in the range of 1 to 120
                            (inclusive).
                          type: number
                        operator:
                          description: One of (above, above_or_equals, below, below_or_equals,
                            equals, not_equals). Defaults to 'equals'.
                          type: string
                        threshold:
                          description: For baseline conditions must be in range [1,
                            1000].
                          type: number
                        thresholdDuration:
                          description: The duration, in seconds, that the threshold
                            must violate in order to create a violation. Value must
                            be a multiple of the 'aggregation_window' (which has a
                            default of 60 seconds). Value must be within 120-3600
                            seconds for baseline conditions, within 120-7200 seconds
                            for static conditions with the sum value function, and
                            within 60-7200 seconds for static conditions with the
                            single_value value function.
                          type: number
                        thresholdOccurrences:
                          description: 'The criteria for how many data points must
                            be in violation for the specified threshold duration.
                            Valid values are: ''ALL'' or ''AT_LEAST_ONCE'' (case insensitive).'
                          type: string
                        timeFunction:
                          description: 'Valid values are: ''all'' or ''any'''
                          type: string
                      required:
                      - threshold
                      type: object
                    type: array
                  description:
                    description: The description of the NRQL alert condition.
                    type: string
                  enabled:
                    description: Whether or not to enable the alert condition.
                    type: boolean
                  expirationDuration:
                    description: The amount of time (in seconds) to wait before considering
                      the signal expired.  Must be in the range of 30 to 172800 (inclusive)
                    type: number
                  fillOption:
                    description: 'Which strategy to use when filling gaps in the signal.
                      If static, the ''fill value'' will be used for filling gaps
                      in the signal. Valid values are: ''NONE'', ''LAST_VALUE'', or
                      ''STATIC'' (case insensitive).'
                    type: string
                  fillValue:
                    description: If using the 'static' fill option, this value will
                      be used for filling gaps in the signal.
                    type: number
                  name:
                    description: The title of the condition.
                    type: string
                  nrql:
                    description: A NRQL query.
                    items:
                      properties:
                        evaluationOffset:
                          description: NRQL queries are evaluated in one-minute time
                            windows. The start time depends on the value you provide
                            in the NRQL condition's `evaluation_offset`.
                          type: number
                        query:
                          type: string
                        sinceValue:
                          description: NRQL queries are evaluated in one-minute time
                            windows. The start time depends on the value you provide
                            in the NRQL condition's `since_value`.
                          type: string
                      required:
                      - query
                      type: object
                    type: array
                  openViolationOnExpiration:
                    description: Whether to create a new violation to capture that
                      the signal expired.
                    type: boolean
                  policyId:
                    description: The ID of the policy where this condition should
                      be used.
                    type: number
                  runbookUrl:
                    description: Runbook URL to display in notifications.
                    type: string
                  slideBy:
                    description: The duration of overlapping timewindows used to smooth
                      the chart line, in seconds. Must be a factor of `aggregation_window`
                      and less than the aggregation window. It should be greater or
                      equal to 30 seconds if `aggregation_window` is less than or
                      equal to 3600 seconds, or greater or equal to `aggregation_window
                      / 120` if `aggregation_window` is greater than 3600 seconds.
                    type: number
                  term:
                    description: A set of terms for this condition. Max 2 terms allowed
                      - at least one 1 critical term and 1 optional warning term.
                    items:
                      properties:
                        duration:
                          description: In minutes, must be in the range of 1 to 120
                            (inclusive).
                          type: number
                        operator:
                          description: One of (above, above_or_equals, below, below_or_equals,
                            equals, not_equals). Defaults to 'equals'.
                          type: string
                        priority:
                          description: One of (critical, warning). Defaults to 'critical'.
                            At least one condition term must have priority set to
                            'critical'.
                          type: string
                        threshold:
                          description: For baseline conditions must be in range [1,
                            1000].
                          type: number
                        thresholdDuration:
                          description: The duration, in seconds, that the threshold
                            must violate in order to create a violation. Value must
                            be a multiple of the 'aggregation_window' (which has a
                            default of 60 seconds). Value must be within 120-3600
                            seconds for baseline conditions, within 120-7200 seconds
                            for static conditions with the sum value function, and
                            within 60-7200 seconds for static conditions with the
                            single_value value function.
                          type: number
                        thresholdOccurrences:
                          description: 'The criteria for how many data points must
                            be in violation for the specified threshold duration.
                            Valid values are: ''ALL'' or ''AT_LEAST_ONCE'' (case insensitive).'
                          type: string
                        timeFunction:
                          description: 'Valid values are: ''all'' or ''any'''
                          type: string
                      required:
                      - threshold
                      type: object
                    type: array
                  type:
                    description: 'The type of NRQL alert condition to create. Valid
                      values are: ''static'', ''baseline''.'
                    type: string
                  valueFunction:
                    description: 'Values are: ''single_value'' (deprecated) or ''sum''
                      (deprecated)'
                    type: string
                  violationTimeLimit:
                    description: Sets a time limit, in hours, that will automatically
                      force-close a long-lasting violation after the time limit you
                      select. Possible values are 'ONE_HOUR', 'TWO_HOURS', 'FOUR_HOURS',
                      'EIGHT_HOURS', 'TWELVE_HOURS', 'TWENTY_FOUR_HOURS', 'THIRTY_DAYS'
                      (case insensitive).
                    type: string
                  violationTimeLimitSeconds:
                    description: Sets a time limit, in seconds, that will automatically
                      force-close a long-lasting violation after the time limit you
                      select.  Must be in the range of 300 to 2592000 (inclusive)
                    type: number
                  warning:
                    description: A condition term with priority set to warning.
                    items:
                      properties:
                        duration:
                          description: In minutes, must be in the range of 1 to 120
                            (inclusive).
                          type: number
                        operator:
                          description: One of (above, above_or_equals, below, below_or_equals,
                            equals, not_equals). Defaults to 'equals'.
                          type: string
                        threshold:
                          description: For baseline conditions must be in range [1,
                            1000].
                          type: number
                        thresholdDuration:
                          description: The duration, in seconds, that the threshold
                            must violate in order to create a violation. Value must
                            be a multiple of the 'aggregation_window' (which has a
                            default of 60 seconds). Value must be within 120-3600
                            seconds for baseline conditions, within 120-7200 seconds
                            for static conditions with the sum value function, and
                            within 60-7200 seconds for static conditions with the
                            single_value value function.
                          type: number
                        thresholdOccurrences:
                          description: 'The criteria for how many data points must
                            be in violation for the specified threshold duration.
                            Valid values are: ''ALL'' or ''AT_LEAST_ONCE'' (case insensitive).'
                          type: string
                        timeFunction:
                          description: 'Valid values are: ''all'' or ''any'''
                          type: string
                      required:
                      - threshold
                      type: object
                    type: array
                required:
                - name
                - nrql
                - policyId
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AlertConditionStatus defines the observed state of AlertCondition.
            properties:
              atProvider:
                properties:
                  entityGuid:
                    description: The unique entity identifier of the NRQL Condition
                      in New Relic.
                    type: string
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
